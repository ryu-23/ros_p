<?xml version="1.0"?>
<launch>

    <arg name="model" default="$(find uni_car)/urdf/uni_car.urdf.xacro"/>
    <arg name="namespace" default="" />
    <!--<arg name="namespace" default="uni_car" />-->

    <arg name="world_name" default="empty.world" />
    <arg name="cmd_timeout" default="0.5"/>
    <arg name="x_pos" default="-2.0"/>
    <arg name="y_pos" default="-0.5"/>
    <arg name="z_pos" default="0.0" />
    <arg name="roll" default="0.0"/>
    <arg name="pitch" default="0.0"/>
    <arg name="yaw" default="0.0"/>

    <!-- Gazebo  -->
    <!--<env name="GAZEBO_MODEL_PATH" value="$GAZEBO_MODEL_PATH:$(find uni_car)/models" />-->
    <!--<env name="GAZEBO_RESOURCE_PATH" value="$GAZEBO_RESOURCE_PATH:$(find uni_car)/worlds" />-->
    <!--<env name="GAZEBO_PLUGIN_PATH" value="$GAZEBO_PLUGIN_PATH:$(find ackermansteer)/ackermansteer/build" />-->

    <include file="$(find gazebo_ros)/launch/empty_world.launch">
        <arg name="world_name" value="$(find uni_car)/worlds/$(arg world_name)"/>
<!--
    <include file="$(find gazebo_ros)/launch/empty_world.launch">
        <arg name="world_name" value="$(find uni_car)/worlds/empty.world"/>
        <arg name="world_name" value="$(find uni_car)/worlds/house.world"/>
        <arg name="world_name" value="$(find uni_car)/worlds/world.world"/>
        <arg name="world_name" value="$(find uni_car)/worlds/track.world"/>
-->
        <arg name="paused" value="false"/>
        <arg name="use_sim_time" value="true"/>
        <arg name="gui" value="true"/>
        <arg name="headless" value="false"/>
        <arg name="debug" value="false"/>
    </include> 
        
    <param name="robot_description" command="$(find xacro)/xacro --inorder $(find uni_car)/urdf/uni_car.urdf.xacro" />
    
    <rosparam file="$(find uni_car)/config/ctrl_ackermann_steering_controller.yaml" command="load" />
    <rosparam file="$(find uni_car)/config/ctrl_gains.yaml" command="load" />
    <rosparam file="$(find uni_car)/config/ctrl_joint_state_publisher.yaml" command="load" />
    <rosparam file="$(find uni_car)/config/ctrl_steer_bot_hardware_gazebo.yaml" command="load" />

    <!-- Spawn the controllers -->
    <node pkg="controller_manager" type="spawner" name="controller_spawner" 
        args="joint_state_publisher ackermann_steering_controller"
        output="screen" respawn="false" />    

    <!-- Launch  the robot state publisher -->
    <node name="robot_state_publisher" pkg="robot_state_publisher" type="robot_state_publisher">
        <param name="publish_frequency" value="50.0"/>
    </node>

    <!-- Launch a rqt steering GUI for publishing to /steer_bot/steer_drive_controller/cmd_vel -->
    <node pkg="rqt_robot_steering" type="rqt_robot_steering" name="rqt_robot_steering" >
        <param name="default_topic" value="ackermann_steering_controller/cmd_vel"/>
    </node>
    
    <!-- Launch the car navigation --> 
    <param name="vision_control_flag" type="int" value="0" />
    <param name="manual_speed_control_flag" type="int" value="1" />
    <node pkg="car_navigator" type="odom_path_node.py" name="odom_path_node">
    </node>

    <!-- Spawn robot in Gazebo -->
    <node pkg="gazebo_ros" type="spawn_model" name="spawn_vehicle"
        args="-urdf -param robot_description -model uni_car
            -gazebo_namespace /gazebo
            -x $(arg x_pos) -y $(arg y_pos) -z $(arg z_pos)
            -R $(arg roll) -P $(arg pitch) -Y $(arg yaw)"
        respawn="false" output="screen" />
        
</launch>  
