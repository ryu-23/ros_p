<?xml version="1.0"?>
<!--
  Designed for autonomous education by Jong-Youb Sah (Yeugnam Univ.) & Kuk-Won Koh (Hanla Univ.), Republic of Korea.
  Robot model adapted from https://github.com/srmainwaring/steer_bot/steer_bot_description/urdf/steer_bot.urdf.xacro, 
  which origininated from https://github.com/CIR-KIT/steer_drive_ros/blob/kinetic-devel/steer_drive_controller/test/common/urdf/steerbot.xacro.
-->
<robot name="uni_car" xmlns:xacro="http://wiki.ros.org/xacro">
  <xacro:arg name="laser_visual" default="false"/>
  <xacro:arg name="imu_visual"   default="false"/>
  <xacro:arg name="camera_visual" default="false"/>
  <xacro:arg name="sonar_visual" default="false"/>

  <!-- Include xacro for materials -->
  <xacro:include filename="$(find uni_car)/urdf/materials.xacro"/>



  <!-- Properties -->
  <xacro:property name="robot_namespace" value=""/>

  <xacro:property name="steer_effort" value="10.0"/>
  <xacro:property name="steer_velocity" value="5.0"/>
  <xacro:property name="steer_limit_deg" value="30.0"/>

  <!-- Math constants -->
  <xacro:property name="deg_to_rad" value="0.01745329251994329577"/>
  <xacro:property name="math_pi"        value="3.141592653589793" />
  <xacro:property name="math_pi_over_2" value="1.5707963267948966" />
  <xacro:property name="math_pi_over_4" value="0.785398163397448" />

  <!-- Robot base dimensions -->
  <xacro:property name="base_length" value="0.300" /> 
  <xacro:property name="base_width" value="0.185" /> 
  <xacro:property name="base_height" value="0.07" /> 
  <xacro:property name="base_mass" value="0.5" /> 
  <xacro:property name="ground_clearance" value="0.019" />
  <xacro:property name="wheel_separation" value="0.190" />
  <xacro:property name="wheel_base" value="0.200" />

  <xacro:property name="wheel_separation_h" value="${wheel_base}" />
  <xacro:property name="wheel_separation_w" value="${wheel_separation}" />

  <!-- Wheel link dimensions -->
  <xacro:property name="wheel_radius" value="0.035" />
  <xacro:property name="wheel_thickness" value="0.025" />
  <xacro:property name="wheel_mass" value="0.02" />

  <!-- Steering link dimensions -->
  <xacro:property name="steer_radius" value="0.001" />
  <xacro:property name="steer_thickness" value="0.001" />
  <xacro:property name="steer_mass" value="0.001" />
  <xacro:property name="steer_offset" value="0.002" />
  <xacro:property name="steer_height" value="0.002" />




  <!-- Gazebo plugins -->
  <gazebo>
    <!-- Load ros_control plugin using the steer_bot_hardware_gazebo
    implementation of the hardware_interface::RobotHW -->
    <plugin name="gazebo_ros_control" filename="libgazebo_ros_control.so">
      <robotNamespace>${robot_namespace}</robotNamespace>
      <robotSimType>steer_bot_hardware_gazebo/SteerBotHardwareGazebo</robotSimType>
      <legacyModeNS>false</legacyModeNS>
    </plugin>
  </gazebo>



<!-- Base footprint) -->
<link name="base_footprint"/>

<joint name="base_footprint_joint" type="fixed">
  <origin xyz="0 0 ${ground_clearance}" rpy="0 0 0"/>
  <parent link="base_footprint"/>
  <child link="base_link"/>
</joint>

  <!-- Base link -->
  <link name="base_link">
    <visual>
      <!--<origin xyz="0 0 ${base_height/2}" rpy="0 0 0"/>-->
      <origin xyz="0 0 0" rpy="0 0 0"/>
      <geometry>
        <!--<box size="${base_length} ${base_width} ${base_height}"/>-->
        <mesh filename="package://uni_car/meshes/ROSCAR2_BASE.dae" scale="0.001 0.001 0.001"/>
      </geometry>
      <material name="green" />
    </visual>
    <collision>
      <origin xyz="0 0 ${base_height/2}" rpy="0 0 0"/>
      <geometry>
        <box size="${base_length} ${base_width} ${base_height}"/>
      </geometry>
    </collision>
    <inertial>
        <origin xyz="0 0 0" rpy="0 0 0"/>
        <mass value="0.85" />
        <inertia ixx="0.0022" ixy="0.0" ixz="0.0"
                 iyy="0.0021" iyz="0.0"
                 izz="0.0020" />
    </inertial>
  </link>

  <gazebo reference="base_link">
    <material>Gazebo/Green</material>
  </gazebo>



  <!-- Front steer and rear wheel joints required for ackermann_steering_controller -->  
  <!-- Bicycle model front steer link (required for steer_drive_controller) -->
    <link name="front_steer_link">
      <visual>
        <origin xyz="0 0 0" rpy="0 0 0"/>
        <geometry>
          <cylinder radius="${steer_radius}" length="${steer_thickness}"/>
        </geometry>
        <material name="yellow" />
      </visual>
      <collision>
        <origin xyz="0 0 0" rpy="0 0 0"/>
        <geometry>
          <cylinder radius="${steer_radius}" length="${steer_thickness}"/>
        </geometry>
      </collision>
      <inertial>
        <origin xyz="0 0 0" rpy="0 0 0"/>
        <mass value="0.001" />
        <inertia ixx="0.001" ixy="0.0" ixz="0.0"
                 iyy="0.001" iyz="0.0"
                 izz="0.001" />
      </inertial>
    </link>

    <joint name="front_steer_joint" type="revolute">
      <parent link="base_link"/>
      <child link="front_steer_link"/>
      <origin xyz="${wheel_base/2} 0 ${wheel_radius-ground_clearance}" rpy="0 0 0"/>
      <axis xyz="0 0 1"/>
      <limit effort="${steer_effort}"
             lower="${-180.0 * deg_to_rad}" upper="${180.0 * deg_to_rad}"
             velocity="${steer_velocity}"/>
    </joint>

    <transmission name="front_steer_joint_trans">
      <type>transmission_interface/SimpleTransmission</type>
      <actuator name="front_steer_joint_motor">
        <mechanicalReduction>1</mechanicalReduction>
        <hardwareInterface>hardware_interface/PositionJointInterface</hardwareInterface>
      </actuator>
      <joint name="front_steer_joint">
        <hardwareInterface>hardware_interface/PositionJointInterface</hardwareInterface>
      </joint>
    </transmission>


    <gazebo reference="front_steer_link">
      <material>Gazebo/Yellow</material>
    </gazebo>



  <!-- Bicycle model rear wheel link (required for steer_drive_controller) -->
    <link name="rear_wheel_link">
      <visual>
        <origin xyz="0 0 0" rpy="0 0 0"/>
        <geometry>
          <cylinder radius="${steer_radius}" length="${steer_thickness}"/>
        </geometry>
        <material name="yellow" />
      </visual>
      <collision>
        <origin xyz="0 0 0" rpy="0 0 0"/>
        <geometry>
          <cylinder radius="${steer_radius}" length="${steer_thickness}"/>
        </geometry>
      </collision>
      <inertial>
        <origin xyz="0 0 0" rpy="0 0 0"/>
        <mass value="0.001" />
        <inertia ixx="0.001" ixy="0.0" ixz="0.0"
                 iyy="0.001" iyz="0.0"
                 izz="0.001" />
      </inertial>
    </link>

    <joint name="rear_wheel_joint" type="continuous">
      <parent link="base_link"/>
      <child link="rear_wheel_link"/>
      <origin xyz="-${wheel_base/2} 0 0" rpy="0 0 0"/>
      <axis xyz="0 0 1"/>
    </joint>

    <transmission name="rear_wheel_joint_trans">
      <type>transmission_interface/SimpleTransmission</type>
      <actuator name="rear_wheel_joint_motor">
        <mechanicalReduction>1</mechanicalReduction>
        <hardwareInterface>hardware_interface/VelocityJointInterface</hardwareInterface>
      </actuator>
      <joint name="rear_wheel_joint">
        <hardwareInterface>hardware_interface/VelocityJointInterface</hardwareInterface>
      </joint>
    </transmission>

    <gazebo reference="rear_wheel_link">
      <material>Gazebo/Yellow</material>
    </gazebo>



  <!-- front_right_steer, front_right_wheel -->
     <link name="front_right_steer_link">
      <visual>
        <origin xyz="0 0 0" rpy="0 0 0"/>
        <geometry>
          <cylinder radius="${steer_radius}" length="${steer_thickness}"/>
        </geometry>
        <material name="blue" />
      </visual>
      <collision>
        <origin xyz="0 0 0" rpy="0 0 0"/>
        <geometry>
          <cylinder radius="${steer_radius}" length="${steer_thickness}"/>
        </geometry>
      </collision>
      <inertial>
        <origin xyz="0 0 0" rpy="0 0 0"/>
        <mass value="0.001" />
        <inertia ixx="0.001" ixy="0.0" ixz="0.0"
                 iyy="0.001" iyz="0.0"
                 izz="0.001" />
      </inertial>
    </link>

    <joint name="front_right_steer_joint" type="revolute">
      <parent link="base_link"/>
      <child link="front_right_steer_link"/>
      <origin xyz="${wheel_base/2} -${wheel_separation/2} ${wheel_radius - ground_clearance}" rpy="0 0 0"/>
      <axis xyz="0 0 1"/>
      <limit effort="${steer_effort}"
             lower="-${steer_limit_deg * deg_to_rad}" upper="${steer_limit_deg * deg_to_rad}"
             velocity="${steer_velocity}"/>
    </joint>

    <gazebo reference="front_right_steer_link">
      <material>Gazebo/Blue</material>
    </gazebo>



    <link name="front_right_wheel_link">
      <visual>
        <origin xyz="0 0 0" rpy="${90*deg_to_rad} 0 0"/>
        <geometry>
          <!--<cylinder radius="${wheel_radius}" length="${wheel_thickness}"/>-->
          <mesh filename="package://uni_car/meshes/ROSCAR2_WheelRight.dae" scale="0.001 0.001 0.001"/>
        </geometry>
        <material name="red" />
      </visual>
      <collision>
        <origin xyz="0 0 0" rpy="0 0 0"/>
        <geometry>
          <cylinder radius="${wheel_radius}" length="${wheel_thickness}"/>
        </geometry>
<!--
        <surface>
          <friction>
            <kp>1000000.0</kp>
            <kd>10.0</kd>
            <mu1>10.0</mu1>
            <mu2>10.0</mu2>
          </friction>
          <contact>
            <ode>
              <max_vel>100.</max_vel>
              <min_depth>0.</min_depth>
            </ode>
          </contact>
        </surface>
-->
      </collision>
      <inertial>
        <origin xyz="0 0 0" rpy="0 0 0"/>
        <mass value="0.028" />
        <inertia ixx="0.00001" ixy="0.0" ixz="0.0"
                 iyy="0.00001" iyz="0.0"
                 izz="0.00001" />
      </inertial>
    </link>

    <joint name="front_right_wheel_joint" type="continuous">
      <parent link="front_right_steer_link"/>
      <child link="front_right_wheel_link"/>
      <!--<origin xyz="0 0 ${-steer_height}" rpy="${-90 * deg_to_rad} 0 0"/>-->
      <!--<axis xyz="0 0 1"/>-->
      <origin xyz="0 0 0" rpy="-${90*deg_to_rad} 0 0"/>
      <axis xyz="0 0 1"/>
    </joint>

    <transmission name="front_right_steer_joint_trans">
      <type>transmission_interface/SimpleTransmission</type>
      <actuator name="front_right_steer_joint_motor">
        <mechanicalReduction>1</mechanicalReduction>
        <hardwareInterface>hardware_interface/PositionJointInterface</hardwareInterface>
      </actuator>
      <joint name="front_right_steer_joint">
        <hardwareInterface>hardware_interface/PositionJointInterface</hardwareInterface>
      </joint>
    </transmission>

    <transmission name="front_right_wheel_joint_trans">
      <type>transmission_interface/SimpleTransmission</type>
      <actuator name="front_right_wheel_joint_motor">
        <mechanicalReduction>1</mechanicalReduction>
        <hardwareInterface>hardware_interface/VelocityJointInterface</hardwareInterface>
      </actuator>
      <joint name="front_right_wheel_joint">
        <hardwareInterface>hardware_interface/VelocityJointInterface</hardwareInterface>
      </joint>
    </transmission>

    <gazebo reference="front_right_wheel_link">
      <mu1>10</mu1>
      <mu2>10</mu2>
      <kp>1000000.0</kp>
      <kd>1.0</kd>
      <minDepth>0.001</minDepth>
      <maxVel>0.1</maxVel>
      <fdir1>1 0 0</fdir1>
      <material>Gazebo/Red</material>
    </gazebo>



  <!-- front_left_steer, front_left_wheel -->
    <link name="front_left_steer_link">
      <visual>
        <origin xyz="0 0 0" rpy="0 0 0"/>
        <geometry>
          <cylinder radius="${steer_radius}" length="${steer_thickness}"/>
        </geometry>
        <material name="blue" />
      </visual>
      <collision>
        <origin xyz="0 0 0" rpy="0 0 0"/>
        <geometry>
          <cylinder radius="${steer_radius}" length="${steer_thickness}"/>
        </geometry>
      </collision>
      <inertial>
        <origin xyz="0 0 0" rpy="0 0 0"/>
        <mass value="0.001" />
        <inertia ixx="0.001" ixy="0.0" ixz="0.0"
                 iyy="0.001" iyz="0.0"
                 izz="0.001" />
      </inertial>
    </link>

    <joint name="front_left_steer_joint" type="revolute">
      <parent link="base_link"/>
      <child link="front_left_steer_link"/>
      <origin xyz="${wheel_base/2} ${wheel_separation/2} ${wheel_radius - ground_clearance}" rpy="0 0 0"/>
      <axis xyz="0 0 1"/>
      <limit effort="${steer_effort}"
             lower="-${steer_limit_deg * deg_to_rad}" upper="${steer_limit_deg * deg_to_rad}"
             velocity="${steer_velocity}"/>
    </joint>

    <gazebo reference="front_left_steer_link">
      <material>Gazebo/Blue</material>
    </gazebo>



    <link name="front_left_wheel_link">
      <visual>
        <origin xyz="0 0 0" rpy="${90*deg_to_rad} 0 0"/>
        <geometry>
          <!--<cylinder radius="${wheel_radius}" length="${wheel_thickness}"/>-->
          <mesh filename="package://uni_car/meshes/ROSCAR2_WheelLeft.dae" scale="0.001 0.001 0.001"/>
        </geometry>
        <material name="red" />
      </visual>
      <collision>
        <origin xyz="0 0 0" rpy="0 0 0"/>
        <geometry>
          <cylinder radius="${wheel_radius}" length="${wheel_thickness}"/>
        </geometry>
<!--
        <surface>
          <friction>
            <kp>1000000.0</kp>
            <kd>10.0</kd>
            <mu1>10.0</mu1>
            <mu2>10.0</mu2>
          </friction>
          <contact>
            <ode>
              <max_vel>100.</max_vel>
              <min_depth>0.</min_depth>
            </ode>
          </contact>
        </surface>
-->
      </collision>
      <inertial>
        <origin xyz="0 0 0" rpy="0 0 0"/>
        <mass value="0.028" />
        <inertia ixx="0.00001" ixy="0.0" ixz="0.0"
                 iyy="0.00001" iyz="0.0"
                 izz="0.00001" />
      </inertial>
    </link>

    <joint name="front_left_wheel_joint" type="continuous">
      <parent link="front_left_steer_link"/>
      <child link="front_left_wheel_link"/>
      <!--<origin xyz="0 0 ${-steer_height}" rpy="${-90 * deg_to_rad} 0 0"/>-->
      <!--<axis xyz="0 0 1"/>-->
      <origin xyz="0 0 0" rpy="-${90*deg_to_rad} 0 0"/>
      <axis xyz="0 0 1"/>
    </joint>

    <gazebo reference="front_left_wheel_link">
      <mu1>10</mu1>
      <mu2>10</mu2>
      <kp>1000000.0</kp>
      <kd>1.0</kd>
      <minDepth>0.001</minDepth>
      <maxVel>0.1</maxVel>
      <fdir1>1 0 0</fdir1>
      <material>Gazebo/Red</material>
    </gazebo>

    <transmission name="front_left_steer_joint_trans">
      <type>transmission_interface/SimpleTransmission</type>
      <actuator name="front_left_steer_joint_motor">
        <mechanicalReduction>1</mechanicalReduction>
        <hardwareInterface>hardware_interface/PositionJointInterface</hardwareInterface>
      </actuator>
      <joint name="front_left_steer_joint">
        <hardwareInterface>hardware_interface/PositionJointInterface</hardwareInterface>
      </joint>
    </transmission>

    <transmission name="front_left_wheel_joint_trans">
      <type>transmission_interface/SimpleTransmission</type>
      <actuator name="front_left_wheel_joint_motor">
        <mechanicalReduction>1</mechanicalReduction>
        <hardwareInterface>hardware_interface/VelocityJointInterface</hardwareInterface>
      </actuator>
      <joint name="front_left_wheel_joint">
        <hardwareInterface>hardware_interface/VelocityJointInterface</hardwareInterface>
      </joint>
    </transmission>




  <!-- rear_right_wheel -->
    <link name="rear_right_wheel_link">
      <visual>
        <origin xyz="0 0 0" rpy="${90*deg_to_rad} 0 0"/>
        <geometry>
          <!--<cylinder radius="${wheel_radius}" length="${wheel_thickness}"/>-->
          <mesh filename="package://uni_car/meshes/ROSCAR2_WheelRight.dae" scale="0.001 0.001 0.001"/>
        </geometry>
        <material name="red" />
      </visual>
      <collision>
        <origin xyz="0 0 0" rpy="0 0 0"/>
        <geometry>
          <cylinder radius="${wheel_radius}" length="${wheel_thickness}"/>
        </geometry>
<!--
        <surface>
          <friction>
            <kp>1000000.0</kp>
            <kd>10.0</kd>
            <mu1>10.0</mu1>
            <mu2>10.0</mu2>
          </friction>
          <contact>
            <ode>
              <max_vel>100.</max_vel>
              <min_depth>0.</min_depth>
            </ode>
          </contact>
        </surface>
-->
      </collision>
      <inertial>
        <origin xyz="0 0 0" rpy="0 0 0"/>
        <mass value="0.028" />
        <inertia ixx="0.00001" ixy="0.0" ixz="0.0"
                 iyy="0.00001" iyz="0.0"
                 izz="0.00001" />
      </inertial>
    </link>

    <joint name="rear_right_wheel_joint" type="continuous">
      <parent link="base_link"/>
      <child link="rear_right_wheel_link"/>
      <origin xyz="-${wheel_base/2} -${wheel_separation/2} ${wheel_radius-ground_clearance}" rpy="-${90*deg_to_rad} 0 0"/>
      <!--<origin xyz="0 0 -${wheel_radius}" rpy="0 0 0"/>-->
      <!--<axis xyz="0 0 1"/>-->
      <axis xyz="0 0 1"/>
    </joint>

    <transmission name="rear_right_wheel_joint_trans">
      <type>transmission_interface/SimpleTransmission</type>
      <actuator name="rear_right_wheel_joint_motor">
        <mechanicalReduction>1</mechanicalReduction>
        <hardwareInterface>hardware_interface/VelocityJointInterface</hardwareInterface>
      </actuator>
      <joint name="rear_right_wheel_joint">
        <hardwareInterface>hardware_interface/VelocityJointInterface</hardwareInterface>
      </joint>
    </transmission>

    <gazebo reference="rear_right_wheel_link">
      <mu1>10</mu1>
      <mu2>10</mu2>
      <kp>1000000.0</kp>
      <kd>1.0</kd>
      <minDepth>0.001</minDepth>
      <maxVel>0.1</maxVel>
      <fdir1>1 0 0</fdir1>
      <material>Gazebo/Red</material>
    </gazebo>



  <!-- rear_left_wheel -->
    <link name="rear_left_wheel_link">
      <visual>
        <origin xyz="0 0 0" rpy="${90*deg_to_rad} 0 0"/>
        <geometry>
          <!--<cylinder radius="${wheel_radius}" length="${wheel_thickness}"/>-->
          <mesh filename="package://uni_car/meshes/ROSCAR2_WheelLeft.dae" scale="0.001 0.001 0.001"/>
        </geometry>
        <material name="red" />
      </visual>
      <collision>
        <origin xyz="0 0 0" rpy="0 0 0"/>
        <geometry>
          <cylinder radius="${wheel_radius}" length="${wheel_thickness}"/>
        </geometry>
<!--
        <surface>
          <friction>
            <kp>1000000.0</kp>
            <kd>10.0</kd>
            <mu1>10.0</mu1>
            <mu2>10.0</mu2>
          </friction>
          <contact>
            <ode>
              <max_vel>100.</max_vel>
              <min_depth>0.</min_depth>
            </ode>
          </contact>
        </surface>
-->
      </collision>
      <inertial>
        <origin xyz="0 0 0" rpy="0 0 0"/>
        <mass value="0.028" />
        <inertia ixx="0.00001" ixy="0.0" ixz="0.0"
                 iyy="0.00001" iyz="0.0"
                 izz="0.00001" />
      </inertial>
    </link>

    <joint name="rear_left_wheel_joint" type="continuous">
      <parent link="base_link"/>
      <child link="rear_left_wheel_link"/>
      <origin xyz="-${wheel_base/2} ${wheel_separation/2} ${wheel_radius-ground_clearance}" rpy="-${90*deg_to_rad} 0 0"/>
      <!--<origin xyz="0 0 -${wheel_radius}" rpy="0 0 0"/>-->
      <!--<axis xyz="0 0 1"/>-->
      <axis xyz="0 0 1"/>
    </joint>

    <transmission name="rear_left_wheel_joint_trans">
      <type>transmission_interface/SimpleTransmission</type>
      <actuator name="rear_left_wheel_joint_motor">
        <mechanicalReduction>1</mechanicalReduction>
        <hardwareInterface>hardware_interface/VelocityJointInterface</hardwareInterface>
      </actuator>
      <joint name="rear_left_wheel_joint">
        <hardwareInterface>hardware_interface/VelocityJointInterface</hardwareInterface>
      </joint>
    </transmission>

    <gazebo reference="rear_left_wheel_link">
      <mu1>10</mu1>
      <mu2>10</mu2>
      <kp>1000000.0</kp>
      <kd>1.0</kd>
      <minDepth>0.001</minDepth>
      <maxVel>0.1</maxVel>
      <fdir1>1 0 0</fdir1>
      <material>Gazebo/Red</material>
    </gazebo>





<!--
    imu_link
-->
  <link name="imu_link" />

  <joint name="imu_joint" type="fixed">
    <parent link="base_link"/>
    <child link="imu_link"/>
    <origin xyz="0 0 0" rpy="0 0 0"/>
  </joint>

<!--
    base_scan
-->
  <link name="base_scan">
    <visual>
      <origin xyz="0 0 0" rpy="0 0 0"/>
      <geometry>
        <mesh filename="package://uni_car/meshes/ROSCAR2_LiDAR.dae" scale="0.001 0.001 0.001"/>
      </geometry>
      <material name="blue" />
    </visual>
    <collision>
      <origin xyz="0 0 0.10" rpy="0 0 0"/>
      <geometry>
        <cylinder radius="0.030" length="0.020"/>
      </geometry>
    </collision>
    <inertial>
        <origin xyz="0 0 0" rpy="0 0 0"/>
        <mass value="0.114" />
        <inertia ixx="0.001" ixy="0.0" ixz="0.0"
                 iyy="0.001" iyz="0.0"
                 izz="0.001" />
      </inertial>
  </link>

  <gazebo reference="base_scan">
    <material>Gazebo/Blue</material>
  </gazebo>

  <joint name="scan_joint" type="fixed">
    <parent link="base_link"/>
    <child link="base_scan"/>
    <origin xyz="0.070 0 0.099" rpy="0 0 0"/>
  </joint>

<!--
    base_sonar
-->
  <link name="base_sonar">
    <visual>
      <origin xyz="0 0 0" rpy="0 0 0"/>
      <geometry>
        <mesh filename="package://uni_car/meshes/ROSCAR2_Sonar.dae" scale="0.001 0.001 0.001"/>
      </geometry>
      <material name="yellow" />
    </visual>
    <collision>
      <origin xyz="0 0 0.10" rpy="0 0 0"/>
      <geometry>
        <box size="0.010 0.050 0.010"/>
      </geometry>
    </collision>
    <inertial>
        <origin xyz="0 0 0" rpy="0 0 0"/>
        <mass value="0.005" />
        <inertia ixx="0.001" ixy="0.0" ixz="0.0"
                 iyy="0.001" iyz="0.0"
                 izz="0.001" />
      </inertial>
  </link>

  <gazebo reference="base_sonar">
    <material>Gazebo/Blue</material>
  </gazebo>

  <joint name="sonar_joint" type="fixed">
    <parent link="base_link"/>
    <child link="base_sonar"/>
    <origin xyz="0.153 0 0.031" rpy="0 0 0"/>
  </joint>

<!--
    base_camera
-->
  <link name="base_camera">
    <visual>
      <origin xyz="-0.005 0 0" rpy="0 0 0"/>
      <geometry>
        <mesh filename="package://uni_car/meshes/ROSCAR2_PiCameraV2.dae" scale="0.001 0.001 0.001"/>
      </geometry>
      <material name="yellow" />
    </visual>
    <collision>
      <origin xyz="-0.002 0 0" rpy="0 0 0"/>
      <geometry>
        <box size="0.001 0.015 0.015"/>
      </geometry>
    </collision>
    <inertial>
        <origin xyz="0 0 0" rpy="0 0 0"/>
        <mass value="0.003" />
        <inertia ixx="0.001" ixy="0.0" ixz="0.0"
                 iyy="0.001" iyz="0.0"
                 izz="0.001" />
      </inertial>
  </link>

  <gazebo reference="base_camera">
    <material>Gazebo/Blue</material>
  </gazebo>

  <joint name="camera_joint" type="fixed">
    <parent link="base_link"/>
    <child link="base_camera"/>
    <origin xyz="0.105 0 0.180" rpy="0 ${60*deg_to_rad} 0"/>
  </joint>

<!--
    base_camera2
-->
  <link name="base_camera2">
    <collision>
      <origin xyz="-0.002 0 0" rpy="0 0 0"/>
      <geometry>
        <box size="0.001 0.015 0.015"/>
      </geometry>
    </collision>
  </link>

  <joint name="camera_joint2" type="fixed">
    <parent link="base_link"/>
    <child link="base_camera2"/>
    <origin xyz="0.25 0 0.25" rpy="0 ${60*deg_to_rad} 0"/>
  </joint>




<!--
    imu_plugin
-->
  <gazebo reference="imu_link">
    <sensor type="imu" name="imu">
      <always_on>true</always_on>
      <visualize>$(arg imu_visual)</visualize>
    </sensor>
    <material>Gazebo/FlatBlack</material>
  </gazebo>
  <gazebo>
    <plugin name="imu_plugin" filename="libgazebo_ros_imu.so">
      <alwaysOn>true</alwaysOn>
      <bodyName>imu_link</bodyName>
      <topicName>imu</topicName>
      <serviceName>imu_service</serviceName>
      <gaussianNoise>0.0</gaussianNoise>
      <updateRate>200</updateRate>
      <imu>
        <noise>
          <type>gaussian</type>
          <rate>
            <mean>0.0</mean>
            <stddev>2e-4</stddev>
            <bias_mean>0.0000075</bias_mean>
            <bias_stddev>0.0000008</bias_stddev>
          </rate>
          <accel>
            <mean>0.0</mean>
            <stddev>1.7e-2</stddev>
            <bias_mean>0.1</bias_mean>
            <bias_stddev>0.001</bias_stddev>
          </accel>
        </noise>
      </imu>
    </plugin>
  </gazebo>




<!--
    base_scan plugin
-->
    <gazebo reference="base_scan">
        <material>Gazebo/LightBlue</material>
        <sensor type="ray" name="lds_lfcd_sensor">
            <pose>0 0 0 0 0 0</pose>
            <visualize>$(arg laser_visual)</visualize>
            <update_rate>5</update_rate>
            <ray>
                <scan>
                    <horizontal>
                        <samples>360</samples>
                        <resolution>1</resolution>
                        <min_angle>0.0</min_angle>
                        <max_angle>6.28319</max_angle>
                    </horizontal>
                </scan>
                <range>
                    <min>0.120</min>
                    <max>6.0</max>
                    <resolution>0.015</resolution>
                </range>
                <noise>
                    <type>gaussian</type>
                    <mean>0.0</mean>
                    <stddev>0.01</stddev>
                </noise>
            </ray>
            <plugin name="gazebo_ros_lds_lfcd_controller" filename="libgazebo_ros_laser.so">
                <topicName>scan</topicName>
                <frameName>base_scan</frameName>
            </plugin>
        </sensor>
    </gazebo>

<!--
    sonar plugin
-->
    <gazebo reference="base_sonar">
      <material>Gazebo/Grey</material>
      <sensor type="ray" name="sonar">
          <pose>0.25 0 0 0 0 0</pose>
          <visualize>$(arg sonar_visual)</visualize>
          <update_rate>5</update_rate>
          <ray>
            <scan>
              <horizontal>
                <samples>1</samples>
                <resolution>1.0</resolution>
                <min_angle>-0.025</min_angle>
                <max_angle>0.025</max_angle>
              </horizontal>
              <vertical>
                <samples>1</samples>
                <resolution>1</resolution>
                <min_angle>-0.025</min_angle>
                <max_angle>0.025</max_angle>
              </vertical>
            </scan>
            <range>
              <min>0.01</min>
              <max>2.00</max>
              <resolution>0.01</resolution>
            </range>
          </ray>
          <plugin filename="libgazebo_ros_range.so" name="gazebo_ros_range">
            <gaussianNoise>0.005</gaussianNoise>
            <alwaysOn>true</alwaysOn>
            <updateRate>5</updateRate>
            <topicName>/range</topicName>
            <frameName>base_sonar</frameName>
            <fov>0.05</fov>
            <radiation>ultrasound</radiation>
          </plugin>
        </sensor>
    </gazebo>


<!--
    pi-camera_plugin
-->
<!--
  <gazebo reference="base_camera">
    <material>Gazebo/Grey</material>
    <sensor type="camera" name="Pi Camera">
      <always_on>true</always_on>
      <visualize>$(arg camera_visual)</visualize>
      <camera>
          <horizontal_fov>1.085595</horizontal_fov>
          <image>
              <width>320</width>
              <height>240</height>
              <format>R8G8B8</format>
          </image>
          <clip>
              <near>0.030</near>
              <far>100</far>
          </clip>
      </camera>
      <plugin name="camera_controller" filename="libgazebo_ros_camera.so">
        <alwaysOn>true</alwaysOn>
        <updateRate>30.0</updateRate>
        <cameraName>camera</cameraName>
        <frameName>base_camera</frameName>
        <imageTopicName>image_raw</imageTopicName>
        <cameraInfoTopicName>camera_info</cameraInfoTopicName>
        <hackBaseline>0.07</hackBaseline>
        <distortionK1>0.0</distortionK1>
        <distortionK2>0.0</distortionK2>
        <distortionK3>0.0</distortionK3>
        <distortionT1>0.0</distortionT1>
        <distortionT2>0.0</distortionT2>
      </plugin>
    </sensor>
  </gazebo>
-->
  <gazebo reference="base_camera2">
    <sensor type="camera" name="Pi Camera">
      <always_on>true</always_on>
      <visualize>$(arg camera_visual)</visualize>
      <camera>
          <horizontal_fov>1.085595</horizontal_fov>
          <image>
              <width>320</width>
              <height>240</height>
              <format>R8G8B8</format>
          </image>
          <clip>
              <near>0.030</near>
              <far>100</far>
          </clip>
      </camera>
      <plugin name="camera_controller" filename="libgazebo_ros_camera.so">
        <alwaysOn>true</alwaysOn>
        <updateRate>30.0</updateRate>
        <cameraName>camera</cameraName>
        <frameName>base_camera2</frameName>
        <imageTopicName>image_raw</imageTopicName>
        <cameraInfoTopicName>camera_info</cameraInfoTopicName>
        <hackBaseline>0.07</hackBaseline>
        <distortionK1>0.0</distortionK1>
        <distortionK2>0.0</distortionK2>
        <distortionK3>0.0</distortionK3>
        <distortionT1>0.0</distortionT1>
        <distortionT2>0.0</distortionT2>
      </plugin>
    </sensor>
  </gazebo>




</robot>
